name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VCPKG_DEFAULT_TRIPLET: x86-windows-static

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
          submodules: 'recursive'
    
    - name: Install VcPkg
      uses: lukka/get-vcpkg
      # uses: lukka/run-vcpkg@v10
      # with:
      #   vcpkgArguments: 'imgui:x86-windows-static'
      #   vcpkgGitCommitId: "64fabc9401d9296273ed67cd8c39f92c113f9ea5"
      #   vcpkgDirectory: '${{ github.workspace }}/vcpkg'
      #   runVcpkgInstall: true
    
    - name: Install dependencies
      run: ${{ github.workspace }}/vcpkg/vcpkg.exe install imgui:x86-windows-static

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE='{{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake' -DCMAKE_CXX_STANDARD=26 

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

